description: >
  This is an extended version of the upstream orb-tools publishing job.
  It adds a environment variable patching and cross-cutting parameters.

parameters:
  source-dir:
    description: >
      Path to the root of the orb source directory to be packed.
      By default, `src/` is assumed.
    type: string
    default: src/
  destination-file:
    description: Path including filename of where the packed orb will be written.
    type: string
    default: ./.orbspace/orb.yml
  validate:
    description: Boolean for whether or not to do validation on the orb. Default is true.
    type: boolean
    default: true
  checkout:
    description: Boolean for whether or not to checkout as a first step. Default is true.
    type: boolean
    default: true
  attach-at:
    description: >
      Workspace root path that is either an absolute path or a path relative
      to the working directory. Defaults to '.' (the working directory).
    type: string
    default: "."
  persist:
    description: If enabled, the destination-file will be persisted.
    type: boolean
    default: false
  store-artifact:
    description: If enabled, the destination-file will be stored as artifact.
    type: boolean
    default: true
  namespace:
    description: >
      The namespace of your target orb.
      Environment variables from envorbs are accepted.
      By default, the git organization is assumed.
    type: string
    default: ""
  orb-name:
    description: >
      The name of your target orb.
      Environment variables from envorbs are accepted.
      By default, the git repository name is assumed.
    type: string
    default: ""
  version:
    description: >
      The publishing version of your orb.
      Either use an incrementing semantic version (e.g., 1.0.0), or a development version as `dev:<label>`,
      where `label` can be any alphanumeric string.
      Environment variables from envorbs are accepted.
      By default, the environment variable `$ORB_PUBLISHING_VERSION` is assumed.
    type: string
    default: "${ORB_PUBLISHING_VERSION}"
  patch-environment-variables:
    description: >
      To replace all template variables with the respective environment variables.
      Variables have to be defined in the format `{{"{{"}}.VAR{{"}}"}}`.
    type: boolean
    default: true
  patch-parameters:
    description: >
      To patch all crosscutting parameters defined in the src/+parameters.yml file.
      Parameters that are shared among multiple commands, orbs or executors can thereby be shared.
      Define the parameters in the root layer of the +parameters.yml file.
      In every yaml file inside the commands, jobs, or executors folder, the parameters are propagated if they
      are referenced there via << parameters.xyz >>.
    type: boolean
    default: true

executor:
  name: default
  alpine_version: << parameters.alpine_version >>

steps:
  - when:
      condition: << parameters.checkout >>
      steps:
        - checkout
  - attach_workspace:
      at: << parameters.attach-at >>
  - when:
      condition: << parameters.patch-parameters >>
      steps:
        - merge-parameters
  - orb-tools/pack:
      source: << parameters.source-dir >>
      destination: << parameters.destination-file >>
  - when:
      condition: << parameters.patch-environment-variables >>
      steps:
        - env-templater:
            orb-path: << parameters.destination-file >>
            target-path: << parameters.destination-file >>
  - when:
      condition: << parameters.validate >>
      steps:
        - orb-tools/validate:
            orb-path: << parameters.destination-file >>
  - when:
      condition: << parameters.namespace >>
      steps:
        - envorb/value:
            variable: ORB_PUBLISHING_NAMESPACE
            value: << parameters.namespace >>
  - unless:
      condition: << parameters.namespace >>
      steps:
        - envorb/git_org:
            variable: ORB_PUBLISHING_NAMESPACE
  - when:
      condition: << parameters.orb-name >>
      steps:
        - envorb/value:
            variable: ORB_PUBLISHING_NAME
            value: << parameters.orb-name >>
  - unless:
      condition: << parameters.orb-name >>
      steps:
        - envorb/git_name:
            variable: ORB_PUBLISHING_NAME
  - env-publish:
      orb-path: << parameters.destination-file >>
      orb-ref: "${ORB_PUBLISHING_NAMESPACE}/${ORB_PUBLISHING_NAME}@<< parameters.version >>"
      token-variable: << parameters.publish-token-variable >>
  - when:
      condition: << parameters.persist >>
      steps:
        - persist_to_workspace:
            root: << parameters.attach-at >>
            paths:
              - << parameters.destination-file >>
  - when:
      condition: << parameters.store-artifact >>
      steps:
        - store_artifacts:
            path: << parameters.destination-file >>
        - store_artifacts:
            path: .parameters
        - store_artifacts:
            path: src
